/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetPanoraCoreEventsRequest = {
    page?: number | undefined;
    pageSize?: number | undefined;
};

export type GetPanoraCoreEventsResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace GetPanoraCoreEventsRequest$ {
    export const inboundSchema: z.ZodType<GetPanoraCoreEventsRequest, z.ZodTypeDef, unknown> =
        z.object({
            page: z.number().default(1),
            pageSize: z.number().default(10),
        });

    export type Outbound = {
        page: number;
        pageSize: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPanoraCoreEventsRequest> =
        z.object({
            page: z.number().default(1),
            pageSize: z.number().default(10),
        });
}

/** @internal */
export namespace GetPanoraCoreEventsResponse$ {
    export const inboundSchema: z.ZodType<GetPanoraCoreEventsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetPanoraCoreEventsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
            });
        });
}

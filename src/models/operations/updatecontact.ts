/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type UpdateContactRequest = {
    id: string;
};

export type UpdateContactResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedContactOutput?: components.UnifiedContactOutput | undefined;
};

/** @internal */
export namespace UpdateContactRequest$ {
    export const inboundSchema: z.ZodType<UpdateContactRequest, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
    });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateContactRequest> = z.object(
        {
            id: z.string(),
        }
    );
}

/** @internal */
export namespace UpdateContactResponse$ {
    export const inboundSchema: z.ZodType<UpdateContactResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            UnifiedContactOutput: components.UnifiedContactOutput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                UnifiedContactOutput: "unifiedContactOutput",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        UnifiedContactOutput?: components.UnifiedContactOutput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateContactResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            unifiedContactOutput: components.UnifiedContactOutput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                unifiedContactOutput: "UnifiedContactOutput",
            });
        });
}

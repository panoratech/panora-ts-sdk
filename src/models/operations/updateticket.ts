/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type UpdateTicketRequest = {
    id: string;
};

export type UpdateTicketResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedTicketOutput?: components.UnifiedTicketOutput | undefined;
};

/** @internal */
export namespace UpdateTicketRequest$ {
    export const inboundSchema: z.ZodType<UpdateTicketRequest, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
    });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateTicketRequest> = z.object({
        id: z.string(),
    });
}

/** @internal */
export namespace UpdateTicketResponse$ {
    export const inboundSchema: z.ZodType<UpdateTicketResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            UnifiedTicketOutput: components.UnifiedTicketOutput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                UnifiedTicketOutput: "unifiedTicketOutput",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        UnifiedTicketOutput?: components.UnifiedTicketOutput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateTicketResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            unifiedTicketOutput: components.UnifiedTicketOutput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                unifiedTicketOutput: "UnifiedTicketOutput",
            });
        });
}

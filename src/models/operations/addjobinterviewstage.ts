/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddJobInterviewStageRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
    unifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput;
};

export type AddJobInterviewStageResponseBody = {
    message?: string | undefined;
    error?: string | undefined;
    statusCode: number;
    data?: components.UnifiedJobInterviewStageOutput | undefined;
};

export type AddJobInterviewStageResponse = {
    httpMeta: components.HTTPMetadata;
    object?: AddJobInterviewStageResponseBody | undefined;
    unifiedJobInterviewStageOutput?: components.UnifiedJobInterviewStageOutput | undefined;
};

/** @internal */
export namespace AddJobInterviewStageRequest$ {
    export const inboundSchema: z.ZodType<AddJobInterviewStageRequest, z.ZodTypeDef, unknown> = z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean().optional(),
            UnifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedJobInterviewStageInput: "unifiedJobInterviewStageInput",
            });
        });

    export type Outbound = {
        "x-connection-token": string;
        remote_data?: boolean | undefined;
        UnifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddJobInterviewStageRequest> = z
        .object({
            xConnectionToken: z.string(),
            remoteData: z.boolean().optional(),
            unifiedJobInterviewStageInput: components.UnifiedJobInterviewStageInput$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                xConnectionToken: "x-connection-token",
                remoteData: "remote_data",
                unifiedJobInterviewStageInput: "UnifiedJobInterviewStageInput",
            });
        });
}

/** @internal */
export namespace AddJobInterviewStageResponseBody$ {
    export const inboundSchema: z.ZodType<AddJobInterviewStageResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            message: z.string().optional(),
            error: z.string().optional(),
            statusCode: z.number(),
            data: components.UnifiedJobInterviewStageOutput$.inboundSchema.optional(),
        });

    export type Outbound = {
        message?: string | undefined;
        error?: string | undefined;
        statusCode: number;
        data?: components.UnifiedJobInterviewStageOutput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AddJobInterviewStageResponseBody
    > = z.object({
        message: z.string().optional(),
        error: z.string().optional(),
        statusCode: z.number(),
        data: components.UnifiedJobInterviewStageOutput$.outboundSchema.optional(),
    });
}

/** @internal */
export namespace AddJobInterviewStageResponse$ {
    export const inboundSchema: z.ZodType<AddJobInterviewStageResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => AddJobInterviewStageResponseBody$.inboundSchema).optional(),
            UnifiedJobInterviewStageOutput:
                components.UnifiedJobInterviewStageOutput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                UnifiedJobInterviewStageOutput: "unifiedJobInterviewStageOutput",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: AddJobInterviewStageResponseBody$.Outbound | undefined;
        UnifiedJobInterviewStageOutput?:
            | components.UnifiedJobInterviewStageOutput$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddJobInterviewStageResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => AddJobInterviewStageResponseBody$.outboundSchema).optional(),
            unifiedJobInterviewStageOutput:
                components.UnifiedJobInterviewStageOutput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                unifiedJobInterviewStageOutput: "UnifiedJobInterviewStageOutput",
            });
        });
}
